#Log4j的日志配置
#根节点中定义的级别无效,所有在下面其他可以记录日志的都会进入根记录中.原名rootCategory已废弃
log4j.rootLogger 								= ERROR, stdout, console
log4j.appender.console							= org.apache.log4j.ConsoleAppender
log4j.appender.console.layout					= org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern	= [%p][%d] %m%n

#log4j.appender.stdout.File定义日志文件,可以为相对路径或绝对路径
log4j.appender.stdout							= org.apache.log4j.DailyRollingFileAppender
# 未指定绝对路径则使用容器为根目录
log4j.appender.stdout.File						= ${logger.root.uploader}/stdout.log
log4j.appender.stdout.DatePattern				= '.'yyyy-MM-dd'.log'
log4j.appender.stdout.layout					= org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern	= [%p][%d] %l%n\t%m%n

#hibernate日志文件
log4j.appender.hibernate							= org.apache.log4j.DailyRollingFileAppender
log4j.appender.hibernate.File						= ${logger.root.uploader}/hibernate.log
log4j.appender.hibernate.DatePattern				= '.'yyyy-MM-dd'.log'
log4j.appender.hibernate.layout						= org.apache.log4j.PatternLayout
log4j.appender.hibernate.layout.ConversionPattern	= [%p][%d] %l%n\t%m%n

log4j.appender.struts2								= org.apache.log4j.DailyRollingFileAppender
log4j.appender.struts2.File							= ${logger.root.uploader}/struts2.log
log4j.appender.struts2.DatePattern					= '.'yyyy-MM-dd'.log'
log4j.appender.struts2.layout						= org.apache.log4j.PatternLayout
log4j.appender.struts2.layout.ConversionPattern		= [%p][%d] %l%n\t%m%n

log4j.appender.spring								= org.apache.log4j.DailyRollingFileAppender
log4j.appender.spring.File							= ${logger.root.uploader}/spring.log
log4j.appender.spring.DatePattern					= '.'yyyy-MM-dd'.log'
log4j.appender.spring.layout						= org.apache.log4j.PatternLayout
log4j.appender.spring.layout.ConversionPattern		= [%p][%d] %l%n\t%m%n

log4j.appender.cas								= org.apache.log4j.DailyRollingFileAppender
log4j.appender.cas.File							= ${logger.root.uploader}/cas.log
log4j.appender.cas.DatePattern					= '.'yyyy-MM-dd'.log'
log4j.appender.cas.layout						= org.apache.log4j.PatternLayout
log4j.appender.cas.layout.ConversionPattern		= [%p][%d] %l%n\t%m%n

log4j.appender.uploader								= org.apache.log4j.DailyRollingFileAppender
log4j.appender.uploader.File						= ${logger.root.uploader}/uploader.log
log4j.appender.uploader.DatePattern					= '.'yyyy-MM-dd'.log'
log4j.appender.uploader.layout						= org.apache.log4j.PatternLayout
log4j.appender.uploader.layout.ConversionPattern	= [%p][%d] %l%n\t%m%n

log4j.appender.timer							= org.apache.log4j.DailyRollingFileAppender
log4j.appender.timer.File						= ${logger.root.uploader}/timer.log
log4j.appender.timer.DatePattern				= '.'yyyy-MM-dd'.log'
log4j.appender.timer.layout						= org.apache.log4j.PatternLayout
log4j.appender.timer.layout.ConversionPattern	= [%p][%d] %l%n\t%m%n

#定时器日志输出
log4j.logger.com.sinosoft.util.timer					= DEBUG, timer
log4j.logger.com.sinosoft.filenet.CacheCleanerTimerTask	= DEBUG, timer

# eFiling的日志文件输出
log4j.logger.com.sinosoft	= INFO, uploader

# 单点
log4j.logger.com.sinosoft.util.cas						= INFO, cas
log4j.logger.org.jasig.cas								= ERROR, cas
log4j.logger.cn.com.sinosoft.filter						= ERROR, cas
log4j.logger.org.hibernate								= ERROR, hibernate
log4j.logger.org.logicalcobwebs							= ERROR, hibernate
log4j.logger.org.apache.struts2							= ERROR, struts2
log4j.logger.com.opensymphony.xwork2					= ERROR, struts2
log4j.logger.org.springframework						= ERROR, spring